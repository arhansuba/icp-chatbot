export interface TestSettings {
    directory: string;
    verbosity: number;
    testModes: TestMode[];
    testFiles: string[];
}
export interface Test {
    path: string;
}
export type TestMode = 'interpreter' | 'wasi';
export type TestStatus = 'passed' | 'failed' | 'errored' | 'skipped';
export interface TestRun {
    test: Test;
    mode: TestMode;
    status: TestStatus;
    message?: string | undefined;
    stdout: string;
    stderr: string;
}
export declare function asTestMode(mode: string): TestMode;
export declare function runTests(options: Partial<TestSettings>, callback?: (result: TestRun) => void | Promise<void>): Promise<TestRun[]>;
//# sourceMappingURL=testing.d.ts.map