"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileCache = void 0;
const fs_1 = require("fs");
const path_1 = require("path");
class FileCache {
    constructor(config) {
        this._map = new Map();
        this._config = config;
    }
    _resolvePath(path) {
        return (0, path_1.resolve)(this._config.directory, path);
    }
    /**
     * Find the file content for a given path.
     * @param path File system path
     */
    get(path) {
        path = this._resolvePath(path);
        if (!(0, fs_1.existsSync)(path)) {
            return;
        }
        const cached = this._map.get(path);
        if (cached !== undefined) {
            return cached;
        }
        const data = (0, fs_1.readFileSync)(path, 'utf8');
        this._map.set(path, data);
        return data;
    }
    /**
     * Update the source code for a given path. Returns `true` if changed, otherwise `false`.
     * @param path File system path
     */
    update(path) {
        path = this._resolvePath(path);
        const previous = this._map.get(path);
        this._map.delete(path);
        const current = this.get(path);
        return current !== previous;
    }
    /**
     * Reset the cache for the given path. Returns `true` if changed, otherwise `false`.
     * @returns File system path
     */
    invalidate(path) {
        path = this._resolvePath(path);
        return this._map.delete(path);
    }
}
exports.FileCache = FileCache;
//# sourceMappingURL=cache.js.map