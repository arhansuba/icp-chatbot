{"version":3,"file":"out-of-character.js","sources":["../src/isEmoji.js","../src/match.js","../src/index.js"],"sourcesContent":["// const variationSelectors = /[\\uFE00-\\uFE0F]/\nconst isVariationSelector = (num) => num >= 65024 && num <= 65039\n// const highSurrogates = /[\\uD800-\\uDBFF]/\nconst isHighSurrogate = (num) => num >= 55296 && num <= 56319\n// const lowSurrogates = /[\\uDC00-\\uDFFF]/\nconst isLowSurrogate = (num) => num >= 56320 && num <= 57343\n\n// allow invisible characters in emojis\nconst isEmoji = function (text, i) {\n  // look at code before\n  if (text[i - 1]) {\n    let code = text.charCodeAt(i - 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n  // look at code before\n  if (text[i + 1]) {\n    let code = text.charCodeAt(i + 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n\n  return false\n}\nmodule.exports = isEmoji\n","const data = require('../data/characters.json')\nconst isEmoji = require('./isEmoji')\n\n/** add spaces at the end */\nconst padStr = function (str, width) {\n  while (str.length < width) {\n    str = '0' + str\n  }\n  return str\n}\n\n// for easier look-up\nconst byCode = data.reduce((h, obj) => {\n  h[obj.code] = obj\n  return h\n}, {})\n\n// chars to create our regex with\nlet codes = data\n  .filter((obj) => obj.replaceWith !== undefined)\n  .map((obj) => {\n    return obj.code.replace(/^U\\+/, '\\\\u')\n  })\n\n// return an array of found invisible characters\nconst findAll = function (text) {\n  // console.log(codes)\n  const regEx = new RegExp(`(${codes.join('|')})`, 'g')\n  let matches = []\n  text.replace(regEx, (ch, _b, offset) => {\n    // find the code of the char we matched\n    let code = ch.charCodeAt(0)\n    let hex = code.toString(16).toUpperCase()\n    hex = `U+` + padStr(hex, 4)\n    // console.log(ch, code, hex)\n    let found = byCode[hex] || {}\n    // dont match for emoji zero-width chars\n    if (found.code === 'U+200D') {\n      // is this zero-width used in an emoji?\n      if (isEmoji(text, offset)) {\n        return ch //do nothing\n      }\n    }\n    matches.push({\n      name: found.name,\n      code: found.code,\n      offset: offset,\n      replacement: found.replaceWith || '',\n    })\n    return ch //do nothing\n  })\n  return matches\n}\nmodule.exports = findAll\n","const findAll = require('./match')\n\nmodule.exports = {\n  // find invisible or strange unicode characters in the text\n  detect: (text) => {\n    let matches = findAll(text)\n    if (matches.length > 0) {\n      return matches\n    }\n    return null\n  },\n  // remove invisible or strange unicode characters from the text\n  replace: (text) => {\n    let matches = findAll(text)\n    matches.forEach((o) => {\n      let code = o.code.replace(/^U\\+/, '\\\\u')\n      let reg = new RegExp(code, 'g')\n      text = text.replace(reg, o.replacement || '')\n    })\n    return text\n  },\n}\n"],"names":["isVariationSelector","num","isHighSurrogate","isLowSurrogate","isEmoji","text","i","code","charCodeAt","isEmoji_1","data","require$$0","require$$1","padStr","str","width","length","byCode","reduce","h","obj","codes","filter","replaceWith","undefined","map","replace","findAll","regEx","RegExp","join","matches","ch","_b","offset","hex","toString","toUpperCase","found","push","name","replacement","match","src","detect","forEach","o","reg"],"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"}